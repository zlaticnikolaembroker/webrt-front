{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { HashScroll } from './HashScroll';\nimport { NaviContext } from './NaviContext';\n\nvar NaviProvider =\n/** @class */\nfunction (_super) {\n  __extends(NaviProvider, _super);\n\n  function NaviProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleNavigationSnapshot = function (route) {\n      if (route.type !== 'busy') {\n        _this.setState({\n          steadyRoute: route,\n          busyRoute: undefined\n        });\n      } else {\n        _this.setState({\n          busyRoute: route\n        });\n      }\n    };\n\n    _this.handleError = function (error) {\n      throw error;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  NaviProvider.getDerivedStateFromProps = function (props, state) {\n    if (state.navigation !== props.navigation) {\n      var route = props.navigation.getCurrentValue();\n      return route.type === 'busy' ? {\n        steadyRoute: state.steadyRoute,\n        busyRoute: route,\n        navigation: props.navigation\n      } : {\n        steadyRoute: route,\n        busyRoute: undefined,\n        navigation: props.navigation\n      };\n    }\n\n    return null;\n  };\n\n  NaviProvider.prototype.render = function () {\n    return React.createElement(HashScroll, {\n      behavior: this.props.hashScrollBehavior\n    }, React.createElement(NaviContext.Provider, {\n      value: this.state\n    }, this.props.children));\n  };\n\n  NaviProvider.prototype.componentDidMount = function () {\n    this.subscribe();\n  };\n\n  NaviProvider.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.navigation !== this.props.navigation) {\n      this.unsubscribe();\n      this.subscribe();\n    }\n  };\n\n  NaviProvider.prototype.componentWillUnmount = function () {\n    this.unsubscribe();\n  };\n\n  NaviProvider.prototype.subscribe = function () {\n    if (!this.props.navigation) {\n      throw new Error(\"A <NaviProvider> component must receive a \\\"navigation\\\" prop.\");\n    }\n\n    this.subscription = this.props.navigation.subscribe(this.handleNavigationSnapshot, this.handleError);\n  };\n\n  NaviProvider.prototype.unsubscribe = function () {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      delete this.subscription;\n    }\n  };\n\n  return NaviProvider;\n}(React.Component);\n\nexport { NaviProvider };","map":{"version":3,"sources":["../../src/NaviProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { HashScroll } from './HashScroll';\nimport { NaviContext } from './NaviContext';\nvar NaviProvider = /** @class */ (function (_super) {\n    __extends(NaviProvider, _super);\n    function NaviProvider(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleNavigationSnapshot = function (route) {\n            if (route.type !== 'busy') {\n                _this.setState({\n                    steadyRoute: route,\n                    busyRoute: undefined,\n                });\n            }\n            else {\n                _this.setState({\n                    busyRoute: route,\n                });\n            }\n        };\n        _this.handleError = function (error) {\n            throw error;\n        };\n        _this.state = {};\n        return _this;\n    }\n    NaviProvider.getDerivedStateFromProps = function (props, state) {\n        if (state.navigation !== props.navigation) {\n            var route = props.navigation.getCurrentValue();\n            return route.type === 'busy'\n                ? {\n                    steadyRoute: state.steadyRoute,\n                    busyRoute: route,\n                    navigation: props.navigation,\n                }\n                : {\n                    steadyRoute: route,\n                    busyRoute: undefined,\n                    navigation: props.navigation,\n                };\n        }\n        return null;\n    };\n    NaviProvider.prototype.render = function () {\n        return (React.createElement(HashScroll, { behavior: this.props.hashScrollBehavior },\n            React.createElement(NaviContext.Provider, { value: this.state }, this.props.children)));\n    };\n    NaviProvider.prototype.componentDidMount = function () {\n        this.subscribe();\n    };\n    NaviProvider.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.navigation !== this.props.navigation) {\n            this.unsubscribe();\n            this.subscribe();\n        }\n    };\n    NaviProvider.prototype.componentWillUnmount = function () {\n        this.unsubscribe();\n    };\n    NaviProvider.prototype.subscribe = function () {\n        if (!this.props.navigation) {\n            throw new Error(\"A <NaviProvider> component must receive a \\\"navigation\\\" prop.\");\n        }\n        this.subscription = this.props.navigation.subscribe(this.handleNavigationSnapshot, this.handleError);\n    };\n    NaviProvider.prototype.unsubscribe = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            delete this.subscription;\n        }\n    };\n    return NaviProvider;\n}(React.Component));\nexport { NaviProvider };\n//# sourceMappingURL=NaviProvider.js.map"]},"metadata":{},"sourceType":"module"}