{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { createPromiseFromObservable } from './Observable';\nimport { createRouter } from './Router';\nimport { createURLDescriptor, joinPaths, modifyTrailingSlash } from './URLTools';\nexport function crawl(options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var router, url, predicate, expandPattern, crawler, chunkListObservable, chunkList, paths, redirects, i, chunk, pathname, j, subChunk;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          router = createRouter({\n            basename: options.basename,\n            context: options.context,\n            routes: options.routes\n          });\n          url = createURLDescriptor(options.root || '');\n\n          predicate = options.predicate || function () {\n            return true;\n          };\n\n          expandPattern = options.expandPattern || function (pattern) {\n            return [pattern || ''];\n          };\n\n          crawler = function (pattern, parentRequest) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var patterns;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , expandPattern(pattern)];\n\n                  case 1:\n                    patterns = _a.sent() || [];\n                    return [2\n                    /*return*/\n                    , patterns.map(function (pattern) {\n                      return {\n                        headers: parentRequest.headers,\n                        url: createURLDescriptor(joinPaths(parentRequest.mountpath, pattern)),\n                        context: parentRequest.headers\n                      };\n                    }).filter(predicate)];\n                }\n              });\n            });\n          };\n\n          chunkListObservable = router.createObservable(url, {\n            crawler: crawler,\n            headers: options.headers,\n            method: 'HEAD'\n          });\n          return [4\n          /*yield*/\n          , createPromiseFromObservable(chunkListObservable) // Build a list of pages and redirects from the list of chunks\n          ];\n\n        case 1:\n          chunkList = _a.sent();\n          paths = [];\n          redirects = {};\n\n          chunk: for (i = 0; i < chunkList.length; i++) {\n            chunk = chunkList[i];\n\n            if (chunk.type === 'crawl') {\n              pathname = chunk.url.pathname;\n\n              if (pathname.indexOf(':') !== -1) {\n                continue;\n              }\n\n              for (j = i + 1; j < chunkList.length; j++, i++) {\n                subChunk = chunkList[j];\n\n                if (subChunk.type === 'crawl' || subChunk.type === 'mount') {\n                  break;\n                }\n\n                if (subChunk.type === 'redirect') {\n                  redirects[pathname] = subChunk.to;\n                  continue chunk;\n                }\n              }\n\n              paths.push(pathname);\n            }\n          }\n\n          return [2\n          /*return*/\n          , {\n            paths: options.trailingSlash !== null ? paths.map(function (path) {\n              return modifyTrailingSlash(path, options.trailingSlash || 'remove');\n            }) : paths,\n            redirects: redirects\n          }];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../src/crawl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { createPromiseFromObservable } from './Observable';\nimport { createRouter } from './Router';\nimport { createURLDescriptor, joinPaths, modifyTrailingSlash } from './URLTools';\nexport function crawl(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var router, url, predicate, expandPattern, crawler, chunkListObservable, chunkList, paths, redirects, i, chunk, pathname, j, subChunk;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    router = createRouter({\n                        basename: options.basename,\n                        context: options.context,\n                        routes: options.routes,\n                    });\n                    url = createURLDescriptor(options.root || '');\n                    predicate = options.predicate || (function () { return true; });\n                    expandPattern = options.expandPattern || (function (pattern) { return [pattern || '']; });\n                    crawler = function (pattern, parentRequest) { return __awaiter(_this, void 0, void 0, function () {\n                        var patterns;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, expandPattern(pattern)];\n                                case 1:\n                                    patterns = (_a.sent()) || [];\n                                    return [2 /*return*/, patterns\n                                            .map(function (pattern) { return ({\n                                            headers: parentRequest.headers,\n                                            url: createURLDescriptor(joinPaths(parentRequest.mountpath, pattern)),\n                                            context: parentRequest.headers,\n                                        }); })\n                                            .filter(predicate)];\n                            }\n                        });\n                    }); };\n                    chunkListObservable = router.createObservable(url, {\n                        crawler: crawler,\n                        headers: options.headers,\n                        method: 'HEAD',\n                    });\n                    return [4 /*yield*/, createPromiseFromObservable(chunkListObservable)\n                        // Build a list of pages and redirects from the list of chunks\n                    ];\n                case 1:\n                    chunkList = _a.sent();\n                    paths = [];\n                    redirects = {};\n                    chunk: for (i = 0; i < chunkList.length; i++) {\n                        chunk = chunkList[i];\n                        if (chunk.type === 'crawl') {\n                            pathname = chunk.url.pathname;\n                            if (pathname.indexOf(':') !== -1) {\n                                continue;\n                            }\n                            for (j = i + 1; j < chunkList.length; j++, i++) {\n                                subChunk = chunkList[j];\n                                if (subChunk.type === 'crawl' || subChunk.type === 'mount') {\n                                    break;\n                                }\n                                if (subChunk.type === 'redirect') {\n                                    redirects[pathname] = subChunk.to;\n                                    continue chunk;\n                                }\n                            }\n                            paths.push(pathname);\n                        }\n                    }\n                    return [2 /*return*/, {\n                            paths: options.trailingSlash !== null\n                                ? paths.map(function (path) { return modifyTrailingSlash(path, options.trailingSlash || 'remove'); })\n                                : paths,\n                            redirects: redirects,\n                        }];\n            }\n        });\n    });\n}\n//# sourceMappingURL=crawl.js.map"]},"metadata":{},"sourceType":"module"}