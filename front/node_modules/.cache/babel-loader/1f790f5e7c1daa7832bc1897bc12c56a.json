{"ast":null,"code":"import * as React from 'react';\nexport var HashScrollContext = React.createContext('auto');\nexport function HashScroll(props) {\n  if (!props.behavior) {\n    return React.createElement(React.Fragment, null, props.children);\n  }\n\n  return React.createElement(HashScrollContext.Provider, {\n    value: props.behavior\n  }, props.children);\n}\n\nfunction smoothScroll(left, top) {\n  try {\n    window.scroll({\n      top: top,\n      left: left,\n      behavior: 'smooth'\n    });\n  } catch (e) {\n    window.scroll(left, top);\n  }\n}\n\nvar behaviors = {\n  none: function () {},\n  auto: function (hash) {\n    if (hash) {\n      var id = document.getElementById(hash.slice(1));\n\n      if (id) {\n        var _a = id.getBoundingClientRect(),\n            top_1 = _a.top,\n            left = _a.left;\n\n        window.scroll(left + window.pageXOffset, top_1 + window.pageYOffset);\n      }\n    } else {\n      window.scroll(0, 0);\n    }\n  },\n  smooth: function (hash) {\n    if (hash) {\n      var id = document.getElementById(hash.slice(1));\n\n      if (id) {\n        var _a = id.getBoundingClientRect(),\n            top_2 = _a.top,\n            left = _a.left;\n\n        smoothScroll(left + window.pageXOffset, top_2 + window.pageYOffset); // Focus the element, as default behavior is cancelled.\n        // https://css-tricks.com/snippets/jquery/smooth-scrolling/\n\n        id.focus();\n      }\n    } else {\n      smoothScroll(0, 0);\n    }\n  }\n};\nexport function scrollToHash(hash, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var fn = typeof behavior === 'string' ? behaviors[behavior] : behavior;\n  fn(hash);\n}","map":{"version":3,"sources":["../../src/HashScroll.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAQA,OAAO,IAAM,iBAAiB,GAAG,KAAK,CAAC,aAAN,CAAwC,MAAxC,CAA1B;AAOP,OAAM,SAAU,UAAV,CAAqB,KAArB,EAA2C;AAC/C,MAAI,CAAC,KAAK,CAAC,QAAX,EAAqB;AACnB,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,KAAK,CAAC,QAAT,CAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B;AAAC,IAAA,KAAK,EAAE,KAAK,CAAC;AAAd,GAA3B,EACG,KAAK,CAAC,QADT,CADF;AAKD;;AAED,SAAS,YAAT,CAAsB,IAAtB,EAAoC,GAApC,EAA+C;AAC7C,MAAI;AACF,IAAA,MAAM,CAAC,MAAP,CAAc;AACZ,MAAA,GAAG,EAAA,GADS;AAEZ,MAAA,IAAI,EAAA,IAFQ;AAGZ,MAAA,QAAQ,EAAE;AAHE,KAAd;AAKD,GAND,CAME,OAAO,CAAP,EAAU;AACV,IAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,GAApB;AACD;AACF;;AAED,IAAM,SAAS,GAAG;AAChB,EAAA,IAAI,EAAE,YAAA,CAAQ,CADE;AAEhB,EAAA,IAAI,EAAE,UAAC,IAAD,EAAgC;AACpC,QAAI,IAAJ,EAAU;AACR,UAAI,EAAE,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAxB,CAAT;;AACA,UAAI,EAAJ,EAAQ;AACF,YAAA,EAAA,GAAA,EAAA,CAAA,qBAAA,EAAA;AAAA,YAAE,KAAA,GAAA,EAAA,CAAA,GAAF;AAAA,YAAO,IAAA,GAAA,EAAA,CAAA,IAAP;;AACJ,QAAA,MAAM,CAAC,MAAP,CAAc,IAAI,GAAG,MAAM,CAAC,WAA5B,EAAyC,KAAG,GAAG,MAAM,CAAC,WAAtD;AACD;AACF,KAND,MAMO;AACL,MAAA,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACD;AACF,GAZe;AAahB,EAAA,MAAM,EAAE,UAAC,IAAD,EAAgC;AACtC,QAAI,IAAJ,EAAU;AACR,UAAI,EAAE,GAAG,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAxB,CAAT;;AACA,UAAI,EAAJ,EAAQ;AACF,YAAA,EAAA,GAAA,EAAA,CAAA,qBAAA,EAAA;AAAA,YAAE,KAAA,GAAA,EAAA,CAAA,GAAF;AAAA,YAAO,IAAA,GAAA,EAAA,CAAA,IAAP;;AACJ,QAAA,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,WAAf,EAA4B,KAAG,GAAG,MAAM,CAAC,WAAzC,CAAZ,CAFM,CAIN;AACA;;AACA,QAAA,EAAE,CAAC,KAAH;AACD;AACF,KAVD,MAUO;AACL,MAAA,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ;AACD;AACF;AA3Be,CAAlB;AA8BA,OAAM,SAAU,YAAV,CACJ,IADI,EAEJ,QAFI,EAEiC;AAArC,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,MAAA;AAAqC;;AAErC,MAAM,EAAE,GAAG,OAAO,QAAP,KAAoB,QAApB,GAA+B,SAAS,CAAC,QAAD,CAAxC,GAAqD,QAAhE;AACA,EAAA,EAAE,CAAC,IAAD,CAAF;AACD","sourceRoot":"","sourcesContent":["import * as React from 'react';\nexport var HashScrollContext = React.createContext('auto');\nexport function HashScroll(props) {\n    if (!props.behavior) {\n        return React.createElement(React.Fragment, null, props.children);\n    }\n    return (React.createElement(HashScrollContext.Provider, { value: props.behavior }, props.children));\n}\nfunction smoothScroll(left, top) {\n    try {\n        window.scroll({\n            top: top,\n            left: left,\n            behavior: 'smooth',\n        });\n    }\n    catch (e) {\n        window.scroll(left, top);\n    }\n}\nvar behaviors = {\n    none: function () { },\n    auto: function (hash) {\n        if (hash) {\n            var id = document.getElementById(hash.slice(1));\n            if (id) {\n                var _a = id.getBoundingClientRect(), top_1 = _a.top, left = _a.left;\n                window.scroll(left + window.pageXOffset, top_1 + window.pageYOffset);\n            }\n        }\n        else {\n            window.scroll(0, 0);\n        }\n    },\n    smooth: function (hash) {\n        if (hash) {\n            var id = document.getElementById(hash.slice(1));\n            if (id) {\n                var _a = id.getBoundingClientRect(), top_2 = _a.top, left = _a.left;\n                smoothScroll(left + window.pageXOffset, top_2 + window.pageYOffset);\n                // Focus the element, as default behavior is cancelled.\n                // https://css-tricks.com/snippets/jquery/smooth-scrolling/\n                id.focus();\n            }\n        }\n        else {\n            smoothScroll(0, 0);\n        }\n    },\n};\nexport function scrollToHash(hash, behavior) {\n    if (behavior === void 0) { behavior = 'auto'; }\n    var fn = typeof behavior === 'string' ? behaviors[behavior] : behavior;\n    fn(hash);\n}\n//# sourceMappingURL=HashScroll.js.map"]},"metadata":{},"sourceType":"module"}