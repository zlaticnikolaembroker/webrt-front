{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/UpdateProfile/UpdateProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Endpoint } from \"../../../http\";\nimport post from \"../../../http/Http\";\nimport { LocalStorage, USERNAME_FIELD_NAME, USER_ID_FIELD_NAME } from \"../../../localstorage/LocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const userId = useMemo(() => {\n    return Number(LocalStorage.getFromLocalStorage(USER_ID_FIELD_NAME));\n  }, []);\n  const [formData, setFormData] = useState({});\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      requestError: false,\n      username: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.username === undefined || dataToValidate.username.length === 0) {\n      errors.username = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  useEffect(() => {\n    if (!isNaN(userId)) {\n      post(Endpoint.GetUserByIdEndpoint, JSON.stringify({\n        id: userId\n      })).then(result => {\n        try {\n          if (result.data) {\n            setFormData({\n              email: JSON.parse(result.data).email,\n              username: JSON.parse(result.data).username,\n              id: JSON.parse(result.data).id,\n              password: JSON.parse(result.data).password\n            });\n            validateData({\n              email: JSON.parse(result.data).email,\n              username: JSON.parse(result.data).username\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        } finally {}\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [userId, validateData]);\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    username: true,\n    requestError: false\n  });\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handleUsernameChanged = useCallback(newusername => {\n    setFormData({ ...formData,\n      username: newusername\n    });\n    validateData({ ...formData,\n      username: newusername\n    });\n  }, [formData, validateData]);\n  const handleUpdateProfileClicked = useCallback(async () => {\n    var _formData$username;\n\n    console.log(formData);\n    const response = await post(Endpoint.UpdateUserEndpoint, JSON.stringify({\n      formData\n    }));\n\n    if (response.error) {\n      setFormErrors({ ...formErrors,\n        requestError: true\n      });\n      return;\n    }\n\n    localStorage.setItem(USERNAME_FIELD_NAME, (_formData$username = formData.username) !== null && _formData$username !== void 0 ? _formData$username : \"\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n  }, [formData, formErrors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => {\n            handleEmailChanged(event.target.value);\n          },\n          isInvalid: formErrors.email,\n          defaultValue: formData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: event => {\n            handleUsernameChanged(event.target.value);\n          },\n          isInvalid: formErrors.username,\n          defaultValue: formData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter username.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: event => {\n          event.preventDefault();\n          handleUpdateProfileClicked();\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), formErrors.requestError ? /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"Xq39sLb3ALy1Y/4X/f6sFQZHPQE=\");\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/UpdateProfile/UpdateProfile.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","Form","Button","Endpoint","post","LocalStorage","USERNAME_FIELD_NAME","USER_ID_FIELD_NAME","UpdateProfile","isLoading","setIsLoading","userId","Number","getFromLocalStorage","formData","setFormData","isEmailValid","email","regex","test","String","toLowerCase","validateData","dataToValidate","errors","requestError","username","undefined","length","setFormErrors","isNaN","GetUserByIdEndpoint","JSON","stringify","id","then","result","data","parse","password","err","console","log","catch","finally","formErrors","handleEmailChanged","newEmail","handleUsernameChanged","newusername","handleUpdateProfileClicked","response","UpdateUserEndpoint","error","localStorage","setItem","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","event","target","value","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAA4D,eAA5D;AACA,OAAOC,IAAP,MAAmC,oBAAnC;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,kBAHF,QAIO,oCAJP;;;AAmBA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAMW,MAAc,GAAGZ,OAAO,CAAC,MAAM;AACnC,WAAOa,MAAM,CAACP,YAAY,CAACQ,mBAAb,CAAiCN,kBAAjC,CAAD,CAAb;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAIA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAW,EAAX,CAAxC;AAEA,QAAMgB,YAAY,GAAGnB,WAAW,CAAEoB,KAAD,IAA6B;AAC5D,UAAMC,KAAK,GACT,uJADF;AAEA,WAAOA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAX,CAAP;AACD,GAJ+B,EAI7B,EAJ6B,CAAhC;AAMA,QAAMC,YAAY,GAAGzB,WAAW,CAC7B0B,cAAD,IAA8B;AAC5B,UAAMC,MAAkB,GAAG;AACzBP,MAAAA,KAAK,EAAE,KADkB;AAEzBQ,MAAAA,YAAY,EAAE,KAFW;AAGzBC,MAAAA,QAAQ,EAAE;AAHe,KAA3B;;AAKA,QAAI,CAACV,YAAY,CAACO,cAAc,CAACN,KAAhB,CAAjB,EAAyC;AACvCO,MAAAA,MAAM,CAACP,KAAP,GAAe,IAAf;AACD;;AACD,QACEM,cAAc,CAACG,QAAf,KAA4BC,SAA5B,IACAJ,cAAc,CAACG,QAAf,CAAwBE,MAAxB,KAAmC,CAFrC,EAGE;AACAJ,MAAAA,MAAM,CAACE,QAAP,GAAkB,IAAlB;AACD;;AACDG,IAAAA,aAAa,CAACL,MAAD,CAAb;AACD,GAjB6B,EAkB9B,CAACR,YAAD,CAlB8B,CAAhC;AAqBAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgC,KAAK,CAACnB,MAAD,CAAV,EAAoB;AAClBP,MAAAA,IAAI,CACFD,QAAQ,CAAC4B,mBADP,EAEFC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,EAAE,EAAEvB;AADS,OAAf,CAFE,CAAJ,CAMGwB,IANH,CAMSC,MAAD,IAAY;AAChB,YAAI;AACF,cAAIA,MAAM,CAACC,IAAX,EAAiB;AACftB,YAAAA,WAAW,CAAC;AACVE,cAAAA,KAAK,EAAEe,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBpB,KADrB;AAEVS,cAAAA,QAAQ,EAAEM,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBX,QAFxB;AAGVQ,cAAAA,EAAE,EAAEF,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBH,EAHlB;AAIVK,cAAAA,QAAQ,EAAEP,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBE;AAJxB,aAAD,CAAX;AAMAjB,YAAAA,YAAY,CAAC;AACXL,cAAAA,KAAK,EAAEe,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBpB,KADpB;AAEXS,cAAAA,QAAQ,EAAEM,IAAI,CAACM,KAAL,CAAWF,MAAM,CAACC,IAAlB,EAAwBX;AAFvB,aAAD,CAAZ;AAID;AACF,SAbD,CAaE,OAAOc,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,SAfD,SAeU,CACT;AACF,OAxBH,EAyBGG,KAzBH,CAyBUH,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OA3BH,EA4BGI,OA5BH,CA4BW,MAAM;AACblC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OA9BH;AA+BD;AACF,GAlCQ,EAkCN,CAACC,MAAD,EAASW,YAAT,CAlCM,CAAT;AAoCA,QAAM,CAACuB,UAAD,EAAahB,aAAb,IAA8B7B,QAAQ,CAAa;AACvDiB,IAAAA,KAAK,EAAE,IADgD;AAEvDS,IAAAA,QAAQ,EAAE,IAF6C;AAGvDD,IAAAA,YAAY,EAAE;AAHyC,GAAb,CAA5C;AAMA,QAAMqB,kBAAkB,GAAGjD,WAAW,CACnCkD,QAAD,IAAuB;AACrBhC,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVG,MAAAA,KAAK,EAAE8B;AAFG,KAAD,CAAX;AAIAzB,IAAAA,YAAY,CAAC,EACX,GAAGR,QADQ;AAEXG,MAAAA,KAAK,EAAE8B;AAFI,KAAD,CAAZ;AAID,GAVmC,EAWpC,CAACjC,QAAD,EAAWQ,YAAX,CAXoC,CAAtC;AAcA,QAAM0B,qBAAqB,GAAGnD,WAAW,CACtCoD,WAAD,IAA0B;AACxBlC,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVY,MAAAA,QAAQ,EAAEuB;AAFA,KAAD,CAAX;AAIA3B,IAAAA,YAAY,CAAC,EACX,GAAGR,QADQ;AAEXY,MAAAA,QAAQ,EAAEuB;AAFC,KAAD,CAAZ;AAID,GAVsC,EAWvC,CAACnC,QAAD,EAAWQ,YAAX,CAXuC,CAAzC;AAcA,QAAM4B,0BAA0B,GAAGrD,WAAW,CAAC,YAAY;AAAA;;AACzD4C,IAAAA,OAAO,CAACC,GAAR,CAAY5B,QAAZ;AACA,UAAMqC,QAAQ,GAAG,MAAM/C,IAAI,CACzBD,QAAQ,CAACiD,kBADgB,EAEzBpB,IAAI,CAACC,SAAL,CAAe;AACbnB,MAAAA;AADa,KAAf,CAFyB,CAA3B;;AAMA,QAAKqC,QAAD,CAAsCE,KAA1C,EAAiD;AAC/CxB,MAAAA,aAAa,CAAC,EACZ,GAAGgB,UADS;AAEZpB,QAAAA,YAAY,EAAE;AAFF,OAAD,CAAb;AAIA;AACD;;AACD6B,IAAAA,YAAY,CAACC,OAAb,CAAqBjD,mBAArB,wBAA0CQ,QAAQ,CAACY,QAAnD,mEAA+D,EAA/D;AACA4B,IAAAA,YAAY,CAACC,OAAb,CAAqBhD,kBAArB,EAAyC4C,QAAQ,CAACd,IAAlD;AACD,GAjB6C,EAiB3C,CAACvB,QAAD,EAAW+B,UAAX,CAjB2C,CAA9C;AAmBA,sBACE;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,YAAY,EAAE,QADT;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,SAAS,EAAE,MAHN;AAILC,MAAAA,MAAM,EAAE,KAJH;AAKLC,MAAAA,KAAK,EAAE,KALF;AAMLC,MAAAA,eAAe,EAAE,WANZ;AAOLC,MAAAA,UAAU,EAAE,OAPP;AAQLC,MAAAA,aAAa,EAAE,OARV;AASLC,MAAAA,WAAW,EAAE,MATR;AAULC,MAAAA,YAAY,EAAE;AAVT,KADT;AAAA,cAcGxD,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,QAAQ,EAAGyD,KAAD,IAAW;AACnBpB,YAAAA,kBAAkB,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,WALH;AAME,UAAA,SAAS,EAAEvB,UAAU,CAAC5B,KANxB;AAOE,UAAA,YAAY,EAAEH,QAAQ,CAACG;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,QAAQ,EAAGiD,KAAD,IAAW;AACnBlB,YAAAA,qBAAqB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB;AACD,WALH;AAME,UAAA,SAAS,EAAEvB,UAAU,CAACnB,QANxB;AAOE,UAAA,YAAY,EAAEZ,QAAQ,CAACY;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAiCE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAGwC,KAAD,IAAW;AAClBA,UAAAA,KAAK,CAACG,cAAN;AACAnB,UAAAA,0BAA0B;AAC3B,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,EA4CGL,UAAU,CAACpB,YAAX,gBACC,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAhDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CAnMD;;GAAMjB,a;;KAAAA,a;AAqMN,eAAeA,aAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Endpoint, GetUserByIdInput, UpdateUserInput } from \"../../../http\";\nimport post, { PostResponse } from \"../../../http/Http\";\nimport {\n  LocalStorage,\n  USERNAME_FIELD_NAME,\n  USER_ID_FIELD_NAME,\n} from \"../../../localstorage/LocalStorage\";\n\ninterface FormData {\n  id?: number;\n  password?: string;\n  email?: string;\n  username?: string;\n}\n\ninterface FormErrors {\n  email: boolean;\n  username: boolean;\n  requestError: boolean;\n}\n\nconst UpdateProfile = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const userId: number = useMemo(() => {\n    return Number(LocalStorage.getFromLocalStorage(USER_ID_FIELD_NAME));\n  }, []);\n\n  const [formData, setFormData] = useState<FormData>({});\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        requestError: false,\n        username: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.username === undefined ||\n        dataToValidate.username.length === 0\n      ) {\n        errors.username = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  useEffect(() => {\n    if (!isNaN(userId)) {\n      post(\n        Endpoint.GetUserByIdEndpoint,\n        JSON.stringify({\n          id: userId,\n        } as GetUserByIdInput)\n      )\n        .then((result) => {\n          try {\n            if (result.data) {\n              setFormData({\n                email: JSON.parse(result.data).email,\n                username: JSON.parse(result.data).username,\n                id: JSON.parse(result.data).id,\n                password: JSON.parse(result.data).password,\n              });\n              validateData({\n                email: JSON.parse(result.data).email,\n                username: JSON.parse(result.data).username,\n              });\n            }\n          } catch (err) {\n            console.log(err);\n          } finally {\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [userId, validateData]);\n\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    username: true,\n    requestError: false,\n  });\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleUsernameChanged = useCallback(\n    (newusername?: string) => {\n      setFormData({\n        ...formData,\n        username: newusername,\n      });\n      validateData({\n        ...formData,\n        username: newusername,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleUpdateProfileClicked = useCallback(async () => {\n    console.log(formData);\n    const response = await post(\n      Endpoint.UpdateUserEndpoint,\n      JSON.stringify({\n        formData,\n      } as UpdateUserInput)\n    );\n    if ((response as unknown as PostResponse).error) {\n      setFormErrors({\n        ...formErrors,\n        requestError: true,\n      });\n      return;\n    }\n    localStorage.setItem(USERNAME_FIELD_NAME, formData.username ?? \"\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n  }, [formData, formErrors]);\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <Form className=\"text-center\">\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={(event) => {\n                handleEmailChanged(event.target.value);\n              }}\n              isInvalid={formErrors.email}\n              defaultValue={formData.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter valid email.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              onChange={(event) => {\n                handleUsernameChanged(event.target.value);\n              }}\n              isInvalid={formErrors.username}\n              defaultValue={formData.username}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter username.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(event) => {\n              event.preventDefault();\n              handleUpdateProfileClicked();\n            }}\n          >\n            Update\n          </Button>\n\n          {formErrors.requestError ? (\n            <Form.Control.Feedback type=\"invalid\">\n              Something went wrong.\n            </Form.Control.Feedback>\n          ) : null}\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}