{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // See https://stackoverflow.com/questions/30402287/extended-errors-do-not-have-message-or-stack-trace\n\n\nvar NaviError =\n/** @class */\nfunction (_super) {\n  __extends(NaviError, _super);\n\n  function NaviError(message) {\n    var _newTarget = this.constructor;\n\n    var _this = this;\n\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, message) || this;\n    _this.__proto__ = trueProto;\n    if (Error.hasOwnProperty('captureStackTrace')) Error.captureStackTrace(_this, _this.constructor);else Object.defineProperty(_this, 'stack', {\n      value: new Error().stack\n    });\n    Object.defineProperty(_this, 'message', {\n      value: message\n    });\n    return _this;\n  }\n\n  return NaviError;\n}(Error);\n\nexport { NaviError };\n\nvar NotFoundError =\n/** @class */\nfunction (_super) {\n  __extends(NotFoundError, _super);\n\n  function NotFoundError(pathname) {\n    var _this = _super.call(this, \"URL not found: \" + pathname) || this; // If you create a NotFoundError without a pathname, the\n    // resolver will catch it and assign the correct pathname.\n\n\n    _this.pathname = pathname;\n    _this.status = 404;\n    _this.name = 'NotFoundError';\n    return _this;\n  }\n\n  return NotFoundError;\n}(NaviError);\n\nexport { NotFoundError };\n\nvar OutOfRootError =\n/** @class */\nfunction (_super) {\n  __extends(OutOfRootError, _super);\n\n  function OutOfRootError(url) {\n    var _this = _super.call(this, \"URL not managed by router: \" + url.href) || this;\n\n    _this.url = url;\n    _this.name = 'OutOfRootError';\n    return _this;\n  }\n\n  return OutOfRootError;\n}(NaviError);\n\nexport { OutOfRootError };","map":{"version":3,"sources":["../../src/Errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;KAEA;;;AACA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAG7B,WAAA,SAAA,CAAY,OAAZ,EAAmB;;;AAAnB,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,SAAS,GAAG,UAAA,CAAW,SAA7B;AAEA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAAd;AAEA,IAAA,KAAI,CAAC,SAAL,GAAiB,SAAjB;AAEA,QAAI,KAAK,CAAC,cAAN,CAAqB,mBAArB,CAAJ,EACI,KAAK,CAAC,iBAAN,CAAwB,KAAxB,EAA8B,KAAI,CAAC,WAAnC,EADJ,KAGG,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,OAA5B,EAAqC;AAClC,MAAA,KAAK,EAAG,IAAI,KAAJ,EAAD,CAAc;AADa,KAArC;AAIH,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,SAA5B,EAAuC;AACrC,MAAA,KAAK,EAAE;AAD8B,KAAvC;;AAGD;;AACH,SAAA,SAAA;AAAC,CArBD,CAA+B,KAA/B,CAAA;;;;AAuBA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAIjC,WAAA,aAAA,CAAY,QAAZ,EAA6B;AAA7B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,oBAAkB,QAAxB,KAAmC,IADrC,CAA6B,CAG3B;AACA;;;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,GAAd;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,eAAZ;;AACD;;AACH,SAAA,aAAA;AAAC,CAbD,CAAmC,SAAnC,CAAA;;;;AAeA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAGlC,WAAA,cAAA,CAAY,GAAZ,EAA8B;AAA9B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,gCAA8B,GAAG,CAAC,IAAxC,KAA+C,IADjD;;AAEE,IAAA,KAAI,CAAC,GAAL,GAAW,GAAX;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,gBAAZ;;AACD;;AACH,SAAA,cAAA;AAAC,CARD,CAAoC,SAApC,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// See https://stackoverflow.com/questions/30402287/extended-errors-do-not-have-message-or-stack-trace\nvar NaviError = /** @class */ (function (_super) {\n    __extends(NaviError, _super);\n    function NaviError(message) {\n        var _newTarget = this.constructor;\n        var _this = this;\n        var trueProto = _newTarget.prototype;\n        _this = _super.call(this, message) || this;\n        _this.__proto__ = trueProto;\n        if (Error.hasOwnProperty('captureStackTrace'))\n            Error.captureStackTrace(_this, _this.constructor);\n        else\n            Object.defineProperty(_this, 'stack', {\n                value: (new Error()).stack\n            });\n        Object.defineProperty(_this, 'message', {\n            value: message\n        });\n        return _this;\n    }\n    return NaviError;\n}(Error));\nexport { NaviError };\nvar NotFoundError = /** @class */ (function (_super) {\n    __extends(NotFoundError, _super);\n    function NotFoundError(pathname) {\n        var _this = _super.call(this, \"URL not found: \" + pathname) || this;\n        // If you create a NotFoundError without a pathname, the\n        // resolver will catch it and assign the correct pathname.\n        _this.pathname = pathname;\n        _this.status = 404;\n        _this.name = 'NotFoundError';\n        return _this;\n    }\n    return NotFoundError;\n}(NaviError));\nexport { NotFoundError };\nvar OutOfRootError = /** @class */ (function (_super) {\n    __extends(OutOfRootError, _super);\n    function OutOfRootError(url) {\n        var _this = _super.call(this, \"URL not managed by router: \" + url.href) || this;\n        _this.url = url;\n        _this.name = 'OutOfRootError';\n        return _this;\n    }\n    return OutOfRootError;\n}(NaviError));\nexport { OutOfRootError };\n//# sourceMappingURL=Errors.js.map"]},"metadata":{},"sourceType":"module"}