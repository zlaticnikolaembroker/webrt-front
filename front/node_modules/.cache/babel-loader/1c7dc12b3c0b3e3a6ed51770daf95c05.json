{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Router } from './Router';\nimport { routeReducer } from './Route';\nimport { resolve } from './resolve';\nimport { createURLDescriptor, modifyTrailingSlash } from './URLTools';\nimport { SimpleSubscription, createOrPassthroughObserver } from './Observable';\nimport { OutOfRootError } from './Errors';\nimport { Deferred } from './Deferred'; // Keep track of the number of navigations since the last steady route,\n// so we can detect and bail out of navigation loops.\n\nvar MAX_NAVIGATIONS_SINCE_STEADY = 100;\n\nvar Navigation =\n/** @class */\nfunction () {\n  function Navigation(options) {\n    var _this = this;\n\n    this.handleUnsubscribe = function (observer) {\n      var index = _this.observers.indexOf(observer);\n\n      if (index !== -1) {\n        _this.observers.splice(index, 1);\n      }\n    }; // Allows for either the location or route or both to be changed at once.\n\n\n    this.handleChunkList = function (chunks) {\n      var isSteady = true;\n      var location = _this._history.location;\n\n      for (var i = 0; i < chunks.length; i++) {\n        var chunk = chunks[i];\n\n        if (chunk.type === 'busy') {\n          isSteady = false;\n        }\n\n        if (chunk.type === 'state') {\n          _this.ignoreNextLocationChange = true;\n\n          _this._history.replace(__assign(__assign({}, location), {\n            state: setLocationRequestState(location.state, chunk.state)\n          }));\n        }\n\n        if (chunk.type === 'redirect') {\n          var revertedState = revertLocationState(location.state);\n\n          if (revertedState) {\n            _this.ignoreNextLocationChange = true;\n\n            _this._history.replace(__assign(__assign({}, location), {\n              state: revertedState\n            }));\n\n            _this._history.push(chunk.to);\n          } else {\n            _this._history.replace(chunk.to);\n          }\n\n          return;\n        }\n      }\n\n      _this.setRoute([{\n        type: 'url',\n        url: createURLDescriptor(_this.lastHandledLocation)\n      }].concat(chunks).reduce(routeReducer, undefined), isSteady);\n    };\n\n    this._history = options.history;\n    this.observers = [];\n    this.isLastRouteSteady = false;\n    this.navigationsSinceSteady = 0;\n    this.basename = options.basename;\n    this.matcher = options.routes;\n    this._router = new Router({\n      context: options.context,\n      routes: options.routes,\n      basename: options.basename\n    });\n    this.trailingSlash = options.trailingSlash === undefined ? 'remove' : options.trailingSlash;\n    this.unlisten = this._history.listen(function (location) {\n      return _this.handleLocationChange(location, false);\n    });\n    this.navigate = this.navigate.bind(this);\n  }\n\n  Navigation.prototype.dispose = function () {\n    this.observers.length = 0;\n    this.unlisten();\n    delete this.unlisten;\n    delete this._history;\n\n    if (this.observableSubscription) {\n      this.observableSubscription.unsubscribe();\n    }\n\n    delete this.observableSubscription;\n    delete this._router;\n    delete this.waitUntilSteadyDeferred;\n    delete this.lastRoute;\n    delete this._router;\n  };\n\n  Navigation.prototype.go = function (n) {\n    return __awaiter(this, void 0, void 0, function () {\n      var urlChanged;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            urlChanged = new Promise(function (resolve) {\n              var unlisten = _this._history.listen(function () {\n                unlisten();\n                resolve();\n              });\n            });\n\n            this._history.go(n);\n\n            return [4\n            /*yield*/\n            , urlChanged];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.getRoute()];\n        }\n      });\n    });\n  };\n\n  Navigation.prototype.goBack = function () {\n    return this.go(-1);\n  };\n\n  Navigation.prototype.goForward = function () {\n    return this.go(1);\n  };\n\n  Navigation.prototype.navigate = function (url, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var nextURL;\n\n    if (typeof url === 'string') {\n      nextURL = createURLDescriptor(url);\n    } else if (url.url) {\n      options = url;\n      nextURL = createURLDescriptor(options.url);\n    } else if (url) {\n      nextURL = createURLDescriptor(url);\n    } else {\n      throw new Error(\"You must specify a URL or state to navigation.navigate().\");\n    }\n\n    var currentLocation = this._history.location; // Default to replace when we're not changing the URL itself, but only\n    // changing state.\n\n    var shouldReplace = options.replace || options.replace !== false && currentLocation.pathname === nextURL.pathname && currentLocation.search === nextURL.search && currentLocation.hash === nextURL.hash;\n\n    this._history[shouldReplace ? 'replace' : 'push']({\n      pathname: nextURL.pathname,\n      search: nextURL.search,\n      hash: nextURL.hash,\n      state: packLocationState({\n        revertTo: shouldReplace ? currentLocation.state : undefined,\n        method: options.method,\n        headers: options.headers,\n        body: options.body,\n        state: options.state\n      })\n    });\n\n    return this.getRoute();\n  }; // TODO:\n  // Put any history state on a \"prefetched state\" object, so that on\n  // navigation, any prefetched state can be reused.\n\n\n  Navigation.prototype.prefetch = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , resolve({\n              basename: this.basename,\n              routes: this.matcher,\n              context: this._router.context,\n              url: url\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Navigation.prototype.refresh = function () {\n    this.handleLocationChange(this._history.location, true);\n    return this.getRoute();\n  };\n\n  Navigation.prototype.setContext = function (context) {\n    this._router.setContext(context);\n\n    return this.refresh();\n  };\n  /**\n   * Get the latest Route object, regardless of whether it is loading.\n   *\n   * This is named as `getCurrentValue()` so that Navigation objects can be\n   * used with React's `createSubscription()`, and other tools that follow\n   * the same specification.\n   */\n\n\n  Navigation.prototype.getCurrentValue = function () {\n    return this.lastRoute;\n  };\n  /**\n   * If loading, returns a promise to the non-busy route. Otherwise, returns\n   * the current route.\n   */\n\n\n  Navigation.prototype.getRoute = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.isLastRouteSteady) {\n          return [2\n          /*return*/\n          , this.lastRoute];\n        } else if (!this.waitUntilSteadyDeferred) {\n          this.waitUntilSteadyDeferred = new Deferred();\n        }\n\n        return [2\n        /*return*/\n        , this.waitUntilSteadyDeferred.promise];\n      });\n    });\n  };\n  /**\n   * Returns the current history state\n   */\n\n\n  Navigation.prototype.extractState = function () {\n    return this._history.location.state;\n  };\n  /**\n   * If you're using code splitting, you'll need to subscribe to changes to\n   * Route, as the route may change as new code chunks are received.\n   */\n\n\n  Navigation.prototype.subscribe = function (onNextOrObserver, onError, onComplete) {\n    var observer = createOrPassthroughObserver(onNextOrObserver, onError, onComplete);\n    this.observers.push(observer);\n    return new SimpleSubscription(this.handleUnsubscribe, observer);\n  };\n\n  Navigation.prototype.handleLocationChange = function (location, force) {\n    if (this.ignoreNextLocationChange) {\n      this.ignoreNextLocationChange = false;\n      return;\n    }\n\n    if (++this.navigationsSinceSteady > MAX_NAVIGATIONS_SINCE_STEADY) {\n      console.error(\"Detected possible navigation loop with \" + MAX_NAVIGATIONS_SINCE_STEADY + \" navigations between steady routes. Bailing.\");\n      return;\n    } // Ensure the pathname always has a trailing `/`, so that we don't\n    // have multiple URLs referring to the same page.\n\n\n    if (this.trailingSlash !== null) {\n      var modifiedPathname = modifyTrailingSlash(location.pathname, this.trailingSlash);\n\n      if (location.pathname !== modifiedPathname) {\n        this._history.replace(__assign(__assign({}, location), {\n          pathname: modifiedPathname\n        }));\n\n        return;\n      }\n    }\n\n    var url = createURLDescriptor(location);\n    var lastHandledLocation = this.lastHandledLocation;\n    this.lastHandledLocation = location;\n\n    if (this.observableSubscription) {\n      this.observableSubscription.unsubscribe();\n    }\n\n    var observable = this._router.createObservable(url, unpackLocationState(location.state));\n\n    if (observable) {\n      this.observableSubscription = observable.subscribe(this.handleChunkList);\n    } else if (!lastHandledLocation) {\n      throw new OutOfRootError(url);\n    }\n  };\n\n  Navigation.prototype.setRoute = function (route, isSteady) {\n    if (route !== this.lastRoute) {\n      this.lastRoute = route;\n      this.isLastRouteSteady = isSteady;\n\n      if (isSteady) {\n        this.navigationsSinceSteady = 0;\n      }\n\n      for (var i = 0; i < this.observers.length; i++) {\n        this.observers[i].next(route);\n      } // Check this.isLastRouteSteady instead of isSteady, in case one of our\n      // subscribers causes navigation again.\n\n\n      if (this.isLastRouteSteady && this.waitUntilSteadyDeferred) {\n        this.waitUntilSteadyDeferred.resolve(route);\n        delete this.waitUntilSteadyDeferred;\n      }\n    }\n  };\n\n  return Navigation;\n}();\n\nexport { Navigation };\nvar NAVI_STATE_KEY = '__navi__';\n/**\n * Set the value of request.state without changing the other request data.\n */\n\nfunction setLocationRequestState(locationState, newState) {\n  var _a;\n\n  if (locationState === void 0) {\n    locationState = {};\n  }\n\n  return __assign(__assign({}, newState), (_a = {}, _a[NAVI_STATE_KEY] = locationState[NAVI_STATE_KEY], _a));\n}\n\nfunction packLocationState(_a) {\n  var _b;\n\n  var revertTo = _a.revertTo,\n      state = _a.state,\n      requestDataWithoutState = __rest(_a, [\"revertTo\", \"state\"]);\n\n  if (revertTo) {\n    revertTo = __assign({}, revertTo);\n\n    if (revertTo[NAVI_STATE_KEY]) {\n      delete revertTo[NAVI_STATE_KEY].revertTo;\n    }\n  }\n\n  return __assign(__assign({}, state), (_b = {}, _b[NAVI_STATE_KEY] = {\n    requestDataWithoutState: requestDataWithoutState,\n    revertTo: revertTo\n  }, _b));\n}\n\nfunction unpackLocationState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var requestDataState = __assign({}, state);\n\n  delete requestDataState[NAVI_STATE_KEY];\n  var naviState = state[NAVI_STATE_KEY] || {};\n  return __assign(__assign({}, naviState.requestDataWithoutState), {\n    state: Object.keys(requestDataState).length ? requestDataState : undefined\n  });\n}\n\nfunction revertLocationState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var naviState = state[NAVI_STATE_KEY] || {};\n  return naviState.revertTo;\n}","map":{"version":3,"sources":["../../src/Navigation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Router } from './Router';\nimport { routeReducer } from './Route';\nimport { resolve } from './resolve';\nimport { createURLDescriptor, modifyTrailingSlash, } from './URLTools';\nimport { SimpleSubscription, createOrPassthroughObserver, } from './Observable';\nimport { OutOfRootError } from './Errors';\nimport { Deferred } from './Deferred';\n// Keep track of the number of navigations since the last steady route,\n// so we can detect and bail out of navigation loops.\nvar MAX_NAVIGATIONS_SINCE_STEADY = 100;\nvar Navigation = /** @class */ (function () {\n    function Navigation(options) {\n        var _this = this;\n        this.handleUnsubscribe = function (observer) {\n            var index = _this.observers.indexOf(observer);\n            if (index !== -1) {\n                _this.observers.splice(index, 1);\n            }\n        };\n        // Allows for either the location or route or both to be changed at once.\n        this.handleChunkList = function (chunks) {\n            var isSteady = true;\n            var location = _this._history.location;\n            for (var i = 0; i < chunks.length; i++) {\n                var chunk = chunks[i];\n                if (chunk.type === 'busy') {\n                    isSteady = false;\n                }\n                if (chunk.type === 'state') {\n                    _this.ignoreNextLocationChange = true;\n                    _this._history.replace(__assign(__assign({}, location), { state: setLocationRequestState(location.state, chunk.state) }));\n                }\n                if (chunk.type === 'redirect') {\n                    var revertedState = revertLocationState(location.state);\n                    if (revertedState) {\n                        _this.ignoreNextLocationChange = true;\n                        _this._history.replace(__assign(__assign({}, location), { state: revertedState }));\n                        _this._history.push(chunk.to);\n                    }\n                    else {\n                        _this._history.replace(chunk.to);\n                    }\n                    return;\n                }\n            }\n            _this.setRoute([{ type: 'url', url: createURLDescriptor(_this.lastHandledLocation) }]\n                .concat(chunks)\n                .reduce(routeReducer, undefined), isSteady);\n        };\n        this._history = options.history;\n        this.observers = [];\n        this.isLastRouteSteady = false;\n        this.navigationsSinceSteady = 0;\n        this.basename = options.basename;\n        this.matcher = options.routes;\n        this._router = new Router({\n            context: options.context,\n            routes: options.routes,\n            basename: options.basename,\n        });\n        this.trailingSlash =\n            options.trailingSlash === undefined ? 'remove' : options.trailingSlash;\n        this.unlisten = this._history.listen(function (location) {\n            return _this.handleLocationChange(location, false);\n        });\n        this.navigate = this.navigate.bind(this);\n    }\n    Navigation.prototype.dispose = function () {\n        this.observers.length = 0;\n        this.unlisten();\n        delete this.unlisten;\n        delete this._history;\n        if (this.observableSubscription) {\n            this.observableSubscription.unsubscribe();\n        }\n        delete this.observableSubscription;\n        delete this._router;\n        delete this.waitUntilSteadyDeferred;\n        delete this.lastRoute;\n        delete this._router;\n    };\n    Navigation.prototype.go = function (n) {\n        return __awaiter(this, void 0, void 0, function () {\n            var urlChanged;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        urlChanged = new Promise(function (resolve) {\n                            var unlisten = _this._history.listen(function () {\n                                unlisten();\n                                resolve();\n                            });\n                        });\n                        this._history.go(n);\n                        return [4 /*yield*/, urlChanged];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.getRoute()];\n                }\n            });\n        });\n    };\n    Navigation.prototype.goBack = function () {\n        return this.go(-1);\n    };\n    Navigation.prototype.goForward = function () {\n        return this.go(1);\n    };\n    Navigation.prototype.navigate = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var nextURL;\n        if (typeof url === 'string') {\n            nextURL = createURLDescriptor(url);\n        }\n        else if (url.url) {\n            options = url;\n            nextURL = createURLDescriptor(options.url);\n        }\n        else if (url) {\n            nextURL = createURLDescriptor(url);\n        }\n        else {\n            throw new Error(\"You must specify a URL or state to navigation.navigate().\");\n        }\n        var currentLocation = this._history.location;\n        // Default to replace when we're not changing the URL itself, but only\n        // changing state.\n        var shouldReplace = options.replace ||\n            (options.replace !== false &&\n                currentLocation.pathname === nextURL.pathname &&\n                currentLocation.search === nextURL.search &&\n                currentLocation.hash === nextURL.hash);\n        this._history[shouldReplace ? 'replace' : 'push']({\n            pathname: nextURL.pathname,\n            search: nextURL.search,\n            hash: nextURL.hash,\n            state: packLocationState({\n                revertTo: shouldReplace ? currentLocation.state : undefined,\n                method: options.method,\n                headers: options.headers,\n                body: options.body,\n                state: options.state,\n            }),\n        });\n        return this.getRoute();\n    };\n    // TODO:\n    // Put any history state on a \"prefetched state\" object, so that on\n    // navigation, any prefetched state can be reused.\n    Navigation.prototype.prefetch = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, resolve({\n                            basename: this.basename,\n                            routes: this.matcher,\n                            context: this._router.context,\n                            url: url,\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Navigation.prototype.refresh = function () {\n        this.handleLocationChange(this._history.location, true);\n        return this.getRoute();\n    };\n    Navigation.prototype.setContext = function (context) {\n        this._router.setContext(context);\n        return this.refresh();\n    };\n    /**\n     * Get the latest Route object, regardless of whether it is loading.\n     *\n     * This is named as `getCurrentValue()` so that Navigation objects can be\n     * used with React's `createSubscription()`, and other tools that follow\n     * the same specification.\n     */\n    Navigation.prototype.getCurrentValue = function () {\n        return this.lastRoute;\n    };\n    /**\n     * If loading, returns a promise to the non-busy route. Otherwise, returns\n     * the current route.\n     */\n    Navigation.prototype.getRoute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.isLastRouteSteady) {\n                    return [2 /*return*/, this.lastRoute];\n                }\n                else if (!this.waitUntilSteadyDeferred) {\n                    this.waitUntilSteadyDeferred = new Deferred();\n                }\n                return [2 /*return*/, this.waitUntilSteadyDeferred.promise];\n            });\n        });\n    };\n    /**\n     * Returns the current history state\n     */\n    Navigation.prototype.extractState = function () {\n        return this._history.location.state;\n    };\n    /**\n     * If you're using code splitting, you'll need to subscribe to changes to\n     * Route, as the route may change as new code chunks are received.\n     */\n    Navigation.prototype.subscribe = function (onNextOrObserver, onError, onComplete) {\n        var observer = createOrPassthroughObserver(onNextOrObserver, onError, onComplete);\n        this.observers.push(observer);\n        return new SimpleSubscription(this.handleUnsubscribe, observer);\n    };\n    Navigation.prototype.handleLocationChange = function (location, force) {\n        if (this.ignoreNextLocationChange) {\n            this.ignoreNextLocationChange = false;\n            return;\n        }\n        if (++this.navigationsSinceSteady > MAX_NAVIGATIONS_SINCE_STEADY) {\n            console.error(\"Detected possible navigation loop with \" + MAX_NAVIGATIONS_SINCE_STEADY + \" navigations between steady routes. Bailing.\");\n            return;\n        }\n        // Ensure the pathname always has a trailing `/`, so that we don't\n        // have multiple URLs referring to the same page.\n        if (this.trailingSlash !== null) {\n            var modifiedPathname = modifyTrailingSlash(location.pathname, this.trailingSlash);\n            if (location.pathname !== modifiedPathname) {\n                this._history.replace(__assign(__assign({}, location), { pathname: modifiedPathname }));\n                return;\n            }\n        }\n        var url = createURLDescriptor(location);\n        var lastHandledLocation = this.lastHandledLocation;\n        this.lastHandledLocation = location;\n        if (this.observableSubscription) {\n            this.observableSubscription.unsubscribe();\n        }\n        var observable = this._router.createObservable(url, unpackLocationState(location.state));\n        if (observable) {\n            this.observableSubscription = observable.subscribe(this.handleChunkList);\n        }\n        else if (!lastHandledLocation) {\n            throw new OutOfRootError(url);\n        }\n    };\n    Navigation.prototype.setRoute = function (route, isSteady) {\n        if (route !== this.lastRoute) {\n            this.lastRoute = route;\n            this.isLastRouteSteady = isSteady;\n            if (isSteady) {\n                this.navigationsSinceSteady = 0;\n            }\n            for (var i = 0; i < this.observers.length; i++) {\n                this.observers[i].next(route);\n            }\n            // Check this.isLastRouteSteady instead of isSteady, in case one of our\n            // subscribers causes navigation again.\n            if (this.isLastRouteSteady && this.waitUntilSteadyDeferred) {\n                this.waitUntilSteadyDeferred.resolve(route);\n                delete this.waitUntilSteadyDeferred;\n            }\n        }\n    };\n    return Navigation;\n}());\nexport { Navigation };\nvar NAVI_STATE_KEY = '__navi__';\n/**\n * Set the value of request.state without changing the other request data.\n */\nfunction setLocationRequestState(locationState, newState) {\n    var _a;\n    if (locationState === void 0) { locationState = {}; }\n    return __assign(__assign({}, newState), (_a = {}, _a[NAVI_STATE_KEY] = locationState[NAVI_STATE_KEY], _a));\n}\nfunction packLocationState(_a) {\n    var _b;\n    var revertTo = _a.revertTo, state = _a.state, requestDataWithoutState = __rest(_a, [\"revertTo\", \"state\"]);\n    if (revertTo) {\n        revertTo = __assign({}, revertTo);\n        if (revertTo[NAVI_STATE_KEY]) {\n            delete revertTo[NAVI_STATE_KEY].revertTo;\n        }\n    }\n    return __assign(__assign({}, state), (_b = {}, _b[NAVI_STATE_KEY] = {\n        requestDataWithoutState: requestDataWithoutState,\n        revertTo: revertTo,\n    }, _b));\n}\nfunction unpackLocationState(state) {\n    if (state === void 0) { state = {}; }\n    var requestDataState = __assign({}, state);\n    delete requestDataState[NAVI_STATE_KEY];\n    var naviState = state[NAVI_STATE_KEY] || {};\n    return __assign(__assign({}, naviState.requestDataWithoutState), { state: Object.keys(requestDataState).length ? requestDataState : undefined });\n}\nfunction revertLocationState(state) {\n    if (state === void 0) { state = {}; }\n    var naviState = state[NAVI_STATE_KEY] || {};\n    return naviState.revertTo;\n}\n//# sourceMappingURL=Navigation.js.map"]},"metadata":{},"sourceType":"module"}