{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    showPassword: false,\n    showRepeatedPassword: false\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    password: true,\n    repeatedPassword: true\n  });\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      password: false,\n      repeatedPassword: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.password === undefined || dataToValidate.password.length === 0) {\n      errors.password = true;\n    }\n\n    if (dataToValidate.repeatedPassword === undefined || dataToValidate.repeatedPassword.length === 0) {\n      errors.repeatedPassword = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handlePasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      password: newPassword\n    });\n    validateData({ ...formData,\n      password: newPassword\n    });\n  }, [formData, validateData]);\n  const handleRepeatedPasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      repeatedPassword: newPassword\n    });\n    validateData({ ...formData,\n      repeatedPassword: newPassword\n    });\n  }, [formData, validateData]);\n  const handleRegisterClicked = useCallback(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => {\n            handleEmailChanged(event.target.value);\n          },\n          isInvalid: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: formData.showPassword ? \"text\" : \"password\",\n          placeholder: \"Enter password\",\n          isInvalid: formErrors.password,\n          onChange: event => {\n            handlePasswordChanged(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: formData.showPassword ? \"Hide password\" : \"Show password\",\n          onChange: event => {\n            setFormData({ ...formData,\n              showPassword: event.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: formData.showRepeatedPassword ? \"text\" : \"password\",\n          placeholder: \"Repeat password\",\n          isInvalid: formErrors.repeatedPassword,\n          onChange: event => {\n            handleRepeatedPasswordChanged(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter repeated password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: formData.showPassword ? \"Hide repeated password\" : \"Show repeated password\",\n          onChange: event => {\n            setFormData({ ...formData,\n              showPassword: event.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: event => {\n          event.preventDefault();\n          handleRegisterClicked();\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"46YojGRnxv7iOPspg/GYK5/ITMc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx"],"names":["React","useCallback","useState","Form","Button","Register","formData","setFormData","showPassword","showRepeatedPassword","formErrors","setFormErrors","email","password","repeatedPassword","isEmailValid","regex","test","String","toLowerCase","validateData","dataToValidate","errors","undefined","length","handleEmailChanged","newEmail","handlePasswordChanged","newPassword","handleRepeatedPasswordChanged","handleRegisterClicked","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","event","target","value","checked","preventDefault"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\ninterface FormData {\n  email?: string;\n  password?: string;\n  showPassword: boolean;\n  repeatedPassword?: string;\n  showRepeatedPassword: boolean;\n}\n\ninterface FormErrors {\n  email: boolean;\n  password: boolean;\n  repeatedPassword: boolean;\n}\n\nconst Register = () => {\n  const [formData, setFormData] = useState<FormData>({\n    showPassword: false,\n    showRepeatedPassword: false,\n  });\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    password: true,\n    repeatedPassword: true,\n  });\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        password: false,\n        repeatedPassword: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.password === undefined ||\n        dataToValidate.password.length === 0\n      ) {\n        errors.password = true;\n      }\n      if (\n        dataToValidate.repeatedPassword === undefined ||\n        dataToValidate.repeatedPassword.length === 0\n      ) {\n        errors.repeatedPassword = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handlePasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        password: newPassword,\n      });\n      validateData({\n        ...formData,\n        password: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleRepeatedPasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n      validateData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleRegisterClicked = useCallback(() => {}, []);\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      <Form className=\"text-center\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={(event) => {\n              handleEmailChanged(event.target.value);\n            }}\n            isInvalid={formErrors.email}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter valid email.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={formData.showPassword ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n            isInvalid={formErrors.password}\n            onChange={(event) => {\n              handlePasswordChanged(event.target.value);\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter password.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-center\">\n          <Form.Check\n            type=\"checkbox\"\n            label={formData.showPassword ? \"Hide password\" : \"Show password\"}\n            onChange={(event) => {\n              setFormData({\n                ...formData,\n                showPassword: event.target.checked,\n              });\n            }}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Repeat password</Form.Label>\n          <Form.Control\n            type={formData.showRepeatedPassword ? \"text\" : \"password\"}\n            placeholder=\"Repeat password\"\n            isInvalid={formErrors.repeatedPassword}\n            onChange={(event) => {\n              handleRepeatedPasswordChanged(event.target.value);\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter repeated password.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-center\">\n          <Form.Check\n            type=\"checkbox\"\n            label={\n              formData.showPassword\n                ? \"Hide repeated password\"\n                : \"Show repeated password\"\n            }\n            onChange={(event) => {\n              setFormData({\n                ...formData,\n                showPassword: event.target.checked,\n              });\n            }}\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleRegisterClicked();\n          }}\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}