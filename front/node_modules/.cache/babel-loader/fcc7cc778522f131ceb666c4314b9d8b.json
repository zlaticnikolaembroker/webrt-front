{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Endpoint } from \"../../../http\";\nimport post from \"../../../http/Http\";\nimport { USERNAME_FIELD_NAME, USER_ID_FIELD_NAME } from \"../../../localstorage/LocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    showPassword: false\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    password: true\n  });\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      password: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.password === undefined || dataToValidate.password.length === 0) {\n      errors.password = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handlePasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      password: newPassword\n    });\n    validateData({ ...formData,\n      password: newPassword\n    });\n  }, [formData, validateData]);\n  const navigation = useNavigation();\n\n  const handleLoginClicked = async () => {\n    var _formData$email;\n\n    const response = await post(Endpoint.LoginUserEndpoint, JSON.stringify({\n      password: formData.password,\n      username: formData.email\n    }));\n\n    if (response.error) {\n      setFormErrors({ ...formErrors,\n        requestError: true\n      });\n      return;\n    }\n\n    localStorage.setItem(USERNAME_FIELD_NAME, (_formData$email = formData.email) !== null && _formData$email !== void 0 ? _formData$email : \"username\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n    navigation.navigate(\"home\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => {\n            handleEmailChanged(event.target.value);\n          },\n          isInvalid: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: formData.showPassword ? \"text\" : \"password\",\n          placeholder: \"Enter password\",\n          isInvalid: formErrors.password,\n          onChange: event => {\n            handlePasswordChanged(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: formData.showPassword ? \"Hide password\" : \"Show password\",\n          onChange: event => {\n            setFormData({ ...formData,\n              showPassword: event.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: event => {\n          event.preventDefault();\n          handleLoginClicked();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"5KBJvbJ0Wvk6dwwAhvkXvnY7zmQ=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/Login/Login.tsx"],"names":["React","useCallback","useState","Form","Button","Endpoint","post","USERNAME_FIELD_NAME","USER_ID_FIELD_NAME","Login","formData","setFormData","showPassword","formErrors","setFormErrors","email","password","isEmailValid","regex","test","String","toLowerCase","validateData","dataToValidate","errors","undefined","length","handleEmailChanged","newEmail","handlePasswordChanged","newPassword","navigation","useNavigation","handleLoginClicked","response","LoginUserEndpoint","JSON","stringify","username","error","requestError","localStorage","setItem","data","navigate","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","event","target","value","checked","preventDefault"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Endpoint, LoginUserInput, RegisterUserInput } from \"../../../http\";\nimport post, { PostResponse } from \"../../../http/Http\";\nimport {\n  USERNAME_FIELD_NAME,\n  USER_ID_FIELD_NAME,\n} from \"../../../localstorage/LocalStorage\";\n\ninterface FormData {\n  email?: string;\n  password?: string;\n  showPassword: boolean;\n}\n\ninterface FormErrors {\n  email: boolean;\n  password: boolean;\n}\n\nconst Login = () => {\n  const [formData, setFormData] = useState<FormData>({ showPassword: false });\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    password: true,\n  });\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        password: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.password === undefined ||\n        dataToValidate.password.length === 0\n      ) {\n        errors.password = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handlePasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        password: newPassword,\n      });\n      validateData({\n        ...formData,\n        password: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const navigation = useNavigation();\n\n  const handleLoginClicked = async () => {\n    const response = await post(\n      Endpoint.LoginUserEndpoint,\n      JSON.stringify({\n        password: formData.password,\n        username: formData.email,\n      } as LoginUserInput)\n    );\n    if ((response as unknown as PostResponse).error) {\n      setFormErrors({\n        ...formErrors,\n        requestError: true,\n      });\n      return;\n    }\n    localStorage.setItem(USERNAME_FIELD_NAME, formData.email ?? \"username\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n    navigation.navigate(\"home\");\n  };\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      <Form className=\"text-center\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={(event) => {\n              handleEmailChanged(event.target.value);\n            }}\n            isInvalid={formErrors.email}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter valid email.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={formData.showPassword ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n            isInvalid={formErrors.password}\n            onChange={(event) => {\n              handlePasswordChanged(event.target.value);\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter password.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-center\">\n          <Form.Check\n            type=\"checkbox\"\n            label={formData.showPassword ? \"Hide password\" : \"Show password\"}\n            onChange={(event) => {\n              setFormData({\n                ...formData,\n                showPassword: event.target.checked,\n              });\n            }}\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleLoginClicked();\n          }}\n        >\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}