{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/UpdateProfile/UpdateProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Endpoint } from \"../../../http\";\nimport post from \"../../../http/Http\";\nimport { LocalStorage, USERNAME_FIELD_NAME, USER_ID_FIELD_NAME } from \"../../../localstorage/LocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = async () => {\n  _s();\n\n  const user = await post(Endpoint.GetUserByIdEndpoint, JSON.stringify({\n    id: LocalStorage.getFromLocalStorage(USER_ID_FIELD_NAME)\n  }));\n  const [formData, setFormData] = useState({});\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    username: true,\n    requestError: false\n  });\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      requestError: false,\n      username: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.username === undefined || dataToValidate.username.length === 0) {\n      errors.username = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handleUsernameChanged = useCallback(newusername => {\n    setFormData({ ...formData,\n      username: newusername\n    });\n    validateData({ ...formData,\n      username: newusername\n    });\n  }, [formData, validateData]);\n  const handleUpdateProfileClicked = useCallback(async () => {\n    var _formData$username;\n\n    const response = await post(Endpoint.RegisterUserEndpoint, JSON.stringify({\n      email: formData.email,\n      username: formData.username\n    }));\n\n    if (response.error) {\n      setFormErrors({ ...formErrors,\n        requestError: true\n      });\n      return;\n    }\n\n    localStorage.setItem(USERNAME_FIELD_NAME, (_formData$username = formData.username) !== null && _formData$username !== void 0 ? _formData$username : \"\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n  }, [formData, formErrors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => {\n            handleEmailChanged(event.target.value);\n          },\n          isInvalid: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: event => {\n            handleUsernameChanged(event.target.value);\n          },\n          isInvalid: formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter username.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: event => {\n          event.preventDefault();\n          handleUpdateProfileClicked();\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), formErrors.requestError ? /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"8kZKTxI1L8zcwEfK5tazRoeB+vw=\");\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/UpdateProfile/UpdateProfile.tsx"],"names":["React","useCallback","useState","Form","Button","Endpoint","post","LocalStorage","USERNAME_FIELD_NAME","USER_ID_FIELD_NAME","UpdateProfile","user","GetUserByIdEndpoint","JSON","stringify","id","getFromLocalStorage","formData","setFormData","formErrors","setFormErrors","email","username","requestError","isEmailValid","regex","test","String","toLowerCase","validateData","dataToValidate","errors","undefined","length","handleEmailChanged","newEmail","handleUsernameChanged","newusername","handleUpdateProfileClicked","response","RegisterUserEndpoint","error","localStorage","setItem","data","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","event","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigation } from \"react-navi\";\nimport { Endpoint, GetUserByIdInput, RegisterUserInput } from \"../../../http\";\nimport post, { PostResponse } from \"../../../http/Http\";\nimport {\n  LocalStorage,\n  USERNAME_FIELD_NAME,\n  USER_ID_FIELD_NAME,\n} from \"../../../localstorage/LocalStorage\";\n\ninterface FormData {\n  email?: string;\n  username?: string;\n}\n\ninterface FormErrors {\n  email: boolean;\n  username: boolean;\n  requestError: boolean;\n}\n\nconst UpdateProfile = async () => {\n  const user = await post(\n    Endpoint.GetUserByIdEndpoint,\n    JSON.stringify({\n      id: LocalStorage.getFromLocalStorage(\n        USER_ID_FIELD_NAME\n      ) as unknown as number,\n    } as GetUserByIdInput)\n  );\n  const [formData, setFormData] = useState<FormData>({});\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    username: true,\n    requestError: false,\n  });\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        requestError: false,\n        username: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.username === undefined ||\n        dataToValidate.username.length === 0\n      ) {\n        errors.username = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleUsernameChanged = useCallback(\n    (newusername?: string) => {\n      setFormData({\n        ...formData,\n        username: newusername,\n      });\n      validateData({\n        ...formData,\n        username: newusername,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleUpdateProfileClicked = useCallback(async () => {\n    const response = await post(\n      Endpoint.RegisterUserEndpoint,\n      JSON.stringify({\n        email: formData.email,\n        username: formData.username,\n      } as RegisterUserInput)\n    );\n    if ((response as unknown as PostResponse).error) {\n      setFormErrors({\n        ...formErrors,\n        requestError: true,\n      });\n      return;\n    }\n    localStorage.setItem(USERNAME_FIELD_NAME, formData.username ?? \"\");\n    localStorage.setItem(USER_ID_FIELD_NAME, response.data);\n  }, [formData, formErrors]);\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      <Form className=\"text-center\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={(event) => {\n              handleEmailChanged(event.target.value);\n            }}\n            isInvalid={formErrors.email}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter valid email.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            onChange={(event) => {\n              handleUsernameChanged(event.target.value);\n            }}\n            isInvalid={formErrors.username}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter username.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleUpdateProfileClicked();\n          }}\n        >\n          Update\n        </Button>\n\n        {formErrors.requestError ? (\n          <Form.Control.Feedback type=\"invalid\">\n            Something went wrong.\n          </Form.Control.Feedback>\n        ) : null}\n      </Form>\n    </div>\n  );\n};\n\nexport default UpdateProfile;\n"]},"metadata":{},"sourceType":"module"}