{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    showPassword: false,\n    showRepeatedPassword: false\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    password: true,\n    repeatedPassword: true\n  });\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      password: false,\n      repeatedPassword: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.password === undefined || dataToValidate.password.length === 0) {\n      errors.password = true;\n    }\n\n    if (dataToValidate.repeatedPassword === undefined || dataToValidate.repeatedPassword.length === 0) {\n      errors.repeatedPassword = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handlePasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      password: newPassword\n    });\n    validateData({ ...formData,\n      password: newPassword\n    });\n  }, [formData, validateData]);\n  const handleRepeatedPasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      repeatedPassword: newPassword\n    });\n    validateData({ ...formData,\n      repeatedPassword: newPassword\n    });\n  }, [formData, validateData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"l8Np3t8eOP/0Cve2IAzNspTzGQM=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx"],"names":["React","useCallback","useState","Register","formData","setFormData","showPassword","showRepeatedPassword","formErrors","setFormErrors","email","password","repeatedPassword","isEmailValid","regex","test","String","toLowerCase","validateData","dataToValidate","errors","undefined","length","handleEmailChanged","newEmail","handlePasswordChanged","newPassword","handleRepeatedPasswordChanged","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\n\ninterface FormData {\n  email?: string;\n  password?: string;\n  showPassword: boolean;\n  repeatedPassword?: string;\n  showRepeatedPassword: boolean;\n}\n\ninterface FormErrors {\n  email: boolean;\n  password: boolean;\n  repeatedPassword: boolean;\n}\n\nconst Register = () => {\n  const [formData, setFormData] = useState<FormData>({\n    showPassword: false,\n    showRepeatedPassword: false,\n  });\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    password: true,\n    repeatedPassword: true,\n  });\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        password: false,\n        repeatedPassword: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.password === undefined ||\n        dataToValidate.password.length === 0\n      ) {\n        errors.password = true;\n      }\n      if (\n        dataToValidate.repeatedPassword === undefined ||\n        dataToValidate.repeatedPassword.length === 0\n      ) {\n        errors.repeatedPassword = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handlePasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        password: newPassword,\n      });\n      validateData({\n        ...formData,\n        password: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleRepeatedPasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n      validateData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      {\" \"}\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}