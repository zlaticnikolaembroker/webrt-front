{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [fromData, setFormData] = useState();\n  const [formErrors, setFormErrors] = useState({\n    email: true\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: event => {//handleMeetingIDChanged(event.target.value);\n        },\n        isInvalid: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please enter valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter password\",\n        onChange: event => {\n          handleUsernameChanged(event.target.value);\n        },\n        isInvalid: formErrors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please enter username.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: event => {\n        event.preventDefault();\n        handleJoinMeetingClicked();\n      },\n      children: \"Join meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"7V4Qn8LrQDt1ECRG5aEnBDVAuQM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/Login/Login.tsx"],"names":["React","useState","Form","Button","Login","fromData","setFormData","formErrors","setFormErrors","email","event","handleUsernameChanged","target","value","username","preventDefault","handleJoinMeetingClicked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;AAWA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAa;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAb,CAA5C;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,QAAQ,EAAGC,KAAD,IAAW,CACnB;AACD,SALH;AAME,QAAA,SAAS,EAAEH,UAAU,CAACE;AANxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBC,UAAAA,qBAAqB,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAArB;AACD,SALH;AAME,QAAA,SAAS,EAAEN,UAAU,CAACO;AANxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eA8BE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAGJ,KAAD,IAAW;AAClBA,QAAAA,KAAK,CAACK,cAAN;AACAC,QAAAA,wBAAwB;AACzB,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA/CD;;GAAMZ,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\ninterface FormData {\n  email?: string;\n  password?: string;\n}\n\ninterface FormErrors {\n  email: boolean;\n}\n\nconst Login = () => {\n  const [fromData, setFormData] = useState<FormData>();\n  const [formErrors, setFormErrors] = useState<FormErrors>({ email: true });\n\n  return (\n    <Form className=\"text-center\">\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={(event) => {\n            //handleMeetingIDChanged(event.target.value);\n          }}\n          isInvalid={formErrors.email}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter valid email.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Enter password\"\n          onChange={(event) => {\n            handleUsernameChanged(event.target.value);\n          }}\n          isInvalid={formErrors.username}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter username.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={(event) => {\n          event.preventDefault();\n          handleJoinMeetingClicked();\n        }}\n      >\n        Join meeting\n      </Button>\n    </Form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}