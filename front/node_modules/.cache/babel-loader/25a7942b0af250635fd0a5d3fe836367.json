{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport resolveChunks from '../Resolvable';\nimport { createMatcherIterator } from '../Matcher';\nexport function withContext(childContextMaybeResolvable, forceChild) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (childContextMaybeResolvable === undefined) {\n      console.warn(\"The first argument to withContext() should be the child context, but it was undefined. If you want to define an empty context, instead pass null.\");\n    }\n  }\n\n  function contextMatcherGenerator(request, child) {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [5\n          /*yield**/\n          , __values(resolveChunks(childContextMaybeResolvable, request, function (childContext) {\n            return createMatcherIterator(child, __assign(__assign({}, request), {\n              context: childContext || {}\n            }));\n          }))];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n\n  return function (child) {\n    return function (request) {\n      return contextMatcherGenerator(request, forceChild ? forceChild(child) : child);\n    };\n  };\n}","map":{"version":3,"sources":["../../../src/matchers/withContext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,aAAP,MAA0C,eAA1C;AACA,SAIE,qBAJF,QAKO,YALP;AAQA,OAAM,SAAU,WAAV,CAIJ,2BAJI,EAOJ,UAPI,EAO8B;AAElC,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,2BAA2B,KAAK,SAApC,EAA+C;AAC7C,MAAA,OAAO,CAAC,IAAR,CACE,mJADF;AAGD;AACF;;AAED,WAAU,uBAAV,CACE,OADF,EAEE,KAFF,EAEuC;;;;AAErC,iBAAA,CAAA;AAAA;AAAA,YAAA,QAAA,CAAO,aAAa,CAClB,2BADkB,EAElB,OAFkB,EAGlB,UAAA,YAAA,EAAY;AACV,mBAAA,qBAAqB,CACnB,KADmB,EACd,QAAA,CAAA,QAAA,CAAA,EAAA,EAEA,OAFA,CAAA,EAEO;AACV,cAAA,OAAO,EAAE,YAAa,IAAI;AADhB,aAFP,CADc,CAArB;AAMC,WAVe,CAApB,CAAA,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;AAYD;;AAED,SAAO,UAAC,KAAD,EAAsC;AAAK,WAAA,UAAC,OAAD,EAAqB;AACrE,aAAA,uBAAuB,CAAC,OAAD,EAAU,UAAU,GAAG,UAAU,CAAC,KAAD,CAAb,GAAuB,KAA3C,CAAvB;AADgD,KAAA;AACwB,GAD1E;AAED","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport resolveChunks from '../Resolvable';\nimport { createMatcherIterator, } from '../Matcher';\nexport function withContext(childContextMaybeResolvable, forceChild) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (childContextMaybeResolvable === undefined) {\n            console.warn(\"The first argument to withContext() should be the child context, but it was undefined. If you want to define an empty context, instead pass null.\");\n        }\n    }\n    function contextMatcherGenerator(request, child) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [5 /*yield**/, __values(resolveChunks(childContextMaybeResolvable, request, function (childContext) {\n                        return createMatcherIterator(child, __assign(__assign({}, request), { context: childContext || {} }));\n                    }))];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    }\n    return function (child) { return function (request) {\n        return contextMatcherGenerator(request, forceChild ? forceChild(child) : child);\n    }; };\n}\n//# sourceMappingURL=withContext.js.map"]},"metadata":{},"sourceType":"module"}