{"ast":null,"code":"var _jsxFileName = \"/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport post from \"../../../http/Http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    showPassword: false,\n    showRepeatedPassword: false\n  });\n  const [formErrors, setFormErrors] = useState({\n    email: true,\n    password: true,\n    repeatedPassword: true,\n    passwordsDoesntMatch: true\n  });\n  const isEmailValid = useCallback(email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n  const validateData = useCallback(dataToValidate => {\n    const errors = {\n      email: false,\n      password: false,\n      repeatedPassword: false,\n      passwordsDoesntMatch: false\n    };\n\n    if (!isEmailValid(dataToValidate.email)) {\n      errors.email = true;\n    }\n\n    if (dataToValidate.password === undefined || dataToValidate.password.length === 0) {\n      errors.password = true;\n    }\n\n    if (dataToValidate.repeatedPassword === undefined || dataToValidate.repeatedPassword.length === 0) {\n      errors.repeatedPassword = true;\n    }\n\n    if (dataToValidate.password !== dataToValidate.repeatedPassword) {\n      errors.passwordsDoesntMatch = true;\n    }\n\n    setFormErrors(errors);\n  }, [isEmailValid]);\n  const handleEmailChanged = useCallback(newEmail => {\n    setFormData({ ...formData,\n      email: newEmail\n    });\n    validateData({ ...formData,\n      email: newEmail\n    });\n  }, [formData, validateData]);\n  const handlePasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      password: newPassword\n    });\n    validateData({ ...formData,\n      password: newPassword\n    });\n  }, [formData, validateData]);\n  const handleRepeatedPasswordChanged = useCallback(newPassword => {\n    setFormData({ ...formData,\n      repeatedPassword: newPassword\n    });\n    validateData({ ...formData,\n      repeatedPassword: newPassword\n    });\n  }, [formData, validateData]);\n  const handleRegisterClicked = useCallback(() => {\n    console.log(formData);\n    post(\"/register_user\", JSON.stringify(formData));\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"auto\",\n      marginTop: \"50px\",\n      height: \"50%\",\n      width: \"40%\",\n      backgroundColor: \"burlywood\",\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: event => {\n            handleEmailChanged(event.target.value);\n          },\n          isInvalid: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: formData.showPassword ? \"text\" : \"password\",\n          placeholder: \"Enter password\",\n          isInvalid: formErrors.password,\n          onChange: event => {\n            handlePasswordChanged(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: formData.showPassword ? \"Hide password\" : \"Show password\",\n          onChange: event => {\n            setFormData({ ...formData,\n              showPassword: event.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: formData.showRepeatedPassword ? \"text\" : \"password\",\n          placeholder: \"Repeat password\",\n          isInvalid: formErrors.repeatedPassword || formErrors.passwordsDoesntMatch,\n          onChange: event => {\n            handleRepeatedPasswordChanged(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: formErrors.repeatedPassword ? \"Please enter repeated password.\" : \"Passwords doesn't match.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: formData.showRepeatedPassword ? \"Hide repeated password\" : \"Show repeated password\",\n          onChange: event => {\n            setFormData({ ...formData,\n              showRepeatedPassword: event.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: event => {\n          event.preventDefault();\n          handleRegisterClicked();\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"GVQ7IhRUVWlLu5IQ7vC29ZsSNkg=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/view/components/Register/Register.tsx"],"names":["React","useCallback","useState","Form","Button","post","Register","formData","setFormData","showPassword","showRepeatedPassword","formErrors","setFormErrors","email","password","repeatedPassword","passwordsDoesntMatch","isEmailValid","regex","test","String","toLowerCase","validateData","dataToValidate","errors","undefined","length","handleEmailChanged","newEmail","handlePasswordChanged","newPassword","handleRepeatedPasswordChanged","handleRegisterClicked","console","log","JSON","stringify","alignContent","margin","marginTop","height","width","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","event","target","value","checked","preventDefault"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport post from \"../../../http/Http\";\n\ninterface FormData {\n  email?: string;\n  password?: string;\n  showPassword: boolean;\n  repeatedPassword?: string;\n  showRepeatedPassword: boolean;\n}\n\ninterface FormErrors {\n  email: boolean;\n  password: boolean;\n  repeatedPassword: boolean;\n  passwordsDoesntMatch: boolean;\n}\n\nconst Register = () => {\n  const [formData, setFormData] = useState<FormData>({\n    showPassword: false,\n    showRepeatedPassword: false,\n  });\n  const [formErrors, setFormErrors] = useState<FormErrors>({\n    email: true,\n    password: true,\n    repeatedPassword: true,\n    passwordsDoesntMatch: true,\n  });\n\n  const isEmailValid = useCallback((email?: string): boolean => {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }, []);\n\n  const validateData = useCallback(\n    (dataToValidate: FormData) => {\n      const errors: FormErrors = {\n        email: false,\n        password: false,\n        repeatedPassword: false,\n        passwordsDoesntMatch: false,\n      };\n      if (!isEmailValid(dataToValidate.email)) {\n        errors.email = true;\n      }\n      if (\n        dataToValidate.password === undefined ||\n        dataToValidate.password.length === 0\n      ) {\n        errors.password = true;\n      }\n      if (\n        dataToValidate.repeatedPassword === undefined ||\n        dataToValidate.repeatedPassword.length === 0\n      ) {\n        errors.repeatedPassword = true;\n      }\n      if (dataToValidate.password !== dataToValidate.repeatedPassword) {\n        errors.passwordsDoesntMatch = true;\n      }\n      setFormErrors(errors);\n    },\n    [isEmailValid]\n  );\n\n  const handleEmailChanged = useCallback(\n    (newEmail?: string) => {\n      setFormData({\n        ...formData,\n        email: newEmail,\n      });\n      validateData({\n        ...formData,\n        email: newEmail,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handlePasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        password: newPassword,\n      });\n      validateData({\n        ...formData,\n        password: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleRepeatedPasswordChanged = useCallback(\n    (newPassword?: string) => {\n      setFormData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n      validateData({\n        ...formData,\n        repeatedPassword: newPassword,\n      });\n    },\n    [formData, validateData]\n  );\n\n  const handleRegisterClicked = useCallback(() => {\n    console.log(formData);\n    post(\"/register_user\", JSON.stringify(formData));\n  }, [formData]);\n\n  return (\n    <div\n      style={{\n        alignContent: \"center\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"50%\",\n        width: \"40%\",\n        backgroundColor: \"burlywood\",\n        paddingTop: \"100px\",\n        paddingBottom: \"100px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n      }}\n    >\n      <Form className=\"text-center\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={(event) => {\n              handleEmailChanged(event.target.value);\n            }}\n            isInvalid={formErrors.email}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter valid email.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type={formData.showPassword ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n            isInvalid={formErrors.password}\n            onChange={(event) => {\n              handlePasswordChanged(event.target.value);\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter password.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-center\">\n          <Form.Check\n            type=\"checkbox\"\n            label={formData.showPassword ? \"Hide password\" : \"Show password\"}\n            onChange={(event) => {\n              setFormData({\n                ...formData,\n                showPassword: event.target.checked,\n              });\n            }}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Repeat password</Form.Label>\n          <Form.Control\n            type={formData.showRepeatedPassword ? \"text\" : \"password\"}\n            placeholder=\"Repeat password\"\n            isInvalid={\n              formErrors.repeatedPassword || formErrors.passwordsDoesntMatch\n            }\n            onChange={(event) => {\n              handleRepeatedPasswordChanged(event.target.value);\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {formErrors.repeatedPassword\n              ? \"Please enter repeated password.\"\n              : \"Passwords doesn't match.\"}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-center\">\n          <Form.Check\n            type=\"checkbox\"\n            label={\n              formData.showRepeatedPassword\n                ? \"Hide repeated password\"\n                : \"Show repeated password\"\n            }\n            onChange={(event) => {\n              setFormData({\n                ...formData,\n                showRepeatedPassword: event.target.checked,\n              });\n            }}\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleRegisterClicked();\n          }}\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}