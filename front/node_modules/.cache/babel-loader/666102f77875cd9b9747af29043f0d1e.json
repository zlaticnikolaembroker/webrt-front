{"ast":null,"code":"const getConnectedDevices = (type, callback) => {\n  navigator.mediaDevices.enumerateDevices().then(devices => {\n    const filtered = devices.filter(device => device.kind === type);\n    callback(filtered);\n  });\n};\n\nexport default getConnectedDevices;","map":{"version":3,"sources":["/home/zlatic/Code/webrtc/webrtc/src/webrtc/WebRTC.ts"],"names":["getConnectedDevices","type","callback","navigator","mediaDevices","enumerateDevices","then","devices","filtered","filter","device","kind"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,IAAD,EAAwBC,QAAxB,KAAyE;AACjGC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,gBAAvB,GACKC,IADL,CACUC,OAAO,IAAI;AACb,UAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBV,IAAzC,CAAjB;AACAC,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAJL;AAKH,CAND;;AAQA,eAAeR,mBAAf","sourcesContent":["const getConnectedDevices = (type: MediaDeviceKind, callback: (input: MediaDeviceInfo[]) => void) => {\n    navigator.mediaDevices.enumerateDevices()\n        .then(devices => {\n            const filtered = devices.filter(device => device.kind === type);\n            callback(filtered);\n        });\n}\n\nexport default getConnectedDevices;"]},"metadata":{},"sourceType":"module"}